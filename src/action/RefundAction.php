<?php

namespace shark\action;

use yii;
use yii\base\Action;
use Stripe;
use shark\models\Stripe as StripeModel;

class RefundAction extends Action
{
    public $successCallback;

    public $config = [
        'callback_url' => '/successful',
        'setApiKey' => null,
    ];

    public function beforeRun()
    {
        if (isset($this->successCallback[0]) && is_array($this->successCallback[0])) {
            $this->config = array_merge($this->config, $this->successCallback[0]);
        }

        parent::beforeRun(); // TODO: Change the autogenerated stub
        return true;
    }

    /**
     * Runs the action.
     * @param integer $id
     * @return mixed
     */
    public function run($id)
    {
        $status = StripeModel::STATUS_ERROR_APP;
        $stripeModel = StripeModel::findById($id);

        try {
            if (!$stripeModel) {
                throw new \Exception('Payment not found');
            }

            Stripe\Stripe::setApiKey($this->config['setApiKey']);

            $refund = Stripe\Refund::create(array(
                "charge" => $stripeModel->stripe_id,
                "amount" => $stripeModel->amount,
            ));

            $status = ($refund && 'succeeded' == $refund->status)
                ? StripeModel::STATUS_SUCCESS
                : StripeModel::STATUS_ERROR_STRIPE_NOT_REFUND;

            $stripeModel = new StripeModel();
            $stripeModel->setAttributes([
                'amount' => $refund->amount,
                'currency' => $refund->currency,
                'status' => $refund->status,
                'stripe_id' => $refund->id,
                'type' => StripeModel::TYPE_REFUND
            ]);
            $stripeModel->save();

        } catch(Stripe\Error\Card $e) {
            $status = StripeModel::STATUS_ERROR_STRIPE;
        } catch(\Exception $e) {
            $status = StripeModel::STATUS_ERROR_APP;
        }

        return $this->controller->redirect([
            $this->config['callback_url'],
            'status' => $status,
            'id' => isset($stripeModel) ? $stripeModel->id : 0
        ]);
    }
}